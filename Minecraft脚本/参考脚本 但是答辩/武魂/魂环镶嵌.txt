//对话钩子
xishou();
function hunhuan(item,hunhuanItem)
{
var NBTTagCompound = Java.type("net.minecraft.nbt.NBTTagCompound");
if(player.getHeldItem()!=null)
{
if(getLore(hunhuanItem,0)=="§c§l[魂环]")
{
var type,amount;
if(getLore(hunhuanItem,1).slice(getLore(hunhuanItem,1).indexOf("+")+1)!=null||getLore(hunhuanItem,1).slice(getLore(hunhuanItem,1).indexOf("+")+1)!="0")
{
type="generic.attackDamage";
amount=Number(getLore(hunhuanItem,1).slice(getLore(hunhuanItem,1).indexOf("+")+1));
npc.executeCommand("scoreboard players add "+player.getName()+" attackDamage1 "+amount+"");
setItemLore(item,5,"§7§l攻击伤害: +"+Score(player,"attackDamage1")+"");
}
if(getLore(hunhuanItem,2).slice(getLore(hunhuanItem,2).indexOf("+")+1)!=null||getLore(hunhuanItem,2).slice(getLore(hunhuanItem,2).indexOf("+")+1)!="0")
{
type="generic.attackDamage";
amount=Number(getLore(hunhuanItem,2).slice(getLore(hunhuanItem,2).indexOf("+")+1,getLore(hunhuanItem,2).indexOf("%")));
npc.executeCommand("scoreboard players add "+player.getName()+" attackDamage2 "+amount+"");
setItemLore(item,6,"§7§l伤害加成: +"+Score(player,"attackDamage2")+"%");
}
if(getLore(hunhuanItem,3).slice(getLore(hunhuanItem,3).indexOf("+")+1)!=null||getLore(hunhuanItem,3).slice(getLore(hunhuanItem,3).indexOf("+")+1)!="0")
{
type="generic.maxHealth";
amount=Number(getLore(hunhuanItem,3).slice(getLore(hunhuanItem,3).indexOf("+")+1));
npc.executeCommand("scoreboard players add "+player.getName()+" maxHealth1 "+amount+"");
setItemLore(item,7,"§7§l最大生命: +"+Score(player,"maxHealth1")+"");
}
if(getLore(hunhuanItem,4).slice(getLore(hunhuanItem,4).indexOf("+")+1)!=null||getLore(hunhuanItem,4).slice(getLore(hunhuanItem,4).indexOf("+")+1)!="0")
{
type="generic.maxHealth";
amount=Number(getLore(hunhuanItem,4).slice(getLore(hunhuanItem,4).indexOf("+")+1,getLore(hunhuanItem,4).indexOf("%")));
npc.executeCommand("scoreboard players add "+player.getName()+" maxHealth2 "+amount+"");
setItemLore(item,8,"§7§l生命加成: +"+Score(player,"maxHealth2")+"%");
}
if(getLore(hunhuanItem,5).slice(getLore(hunhuanItem,5).indexOf("+")+1)!=null||getLore(hunhuanItem,5).slice(getLore(hunhuanItem,5).indexOf("+")+1)!="0")
{
type="generic.attackDamage";
amount=Number(getLore(hunhuanItem,5).slice(getLore(hunhuanItem,5).indexOf("+")+1,getLore(hunhuanItem,5).indexOf("%")));
npc.executeCommand("scoreboard players add "+player.getName()+" Blood "+amount+"");
setItemLore(item,9,"§7§l吸血概率: +"+Score(player,"Blood")+"%");
}
if(getLore(hunhuanItem,6).slice(getLore(hunhuanItem,6).indexOf("+")+1)!=null||getLore(hunhuanItem,6).slice(getLore(hunhuanItem,6).indexOf("+")+1)!="0")
{
type="generic.attackDamage";
amount=Number(getLore(hunhuanItem,6).slice(getLore(hunhuanItem,6).indexOf("+")+1,getLore(hunhuanItem,6).indexOf("%")));
npc.executeCommand("scoreboard players add "+player.getName()+" Blast "+amount+"");
setItemLore(item,10,"§7§l暴击概率: +"+Score(player,"Blast")+"%");
}
if(getLore(hunhuanItem,7).slice(getLore(hunhuanItem,7).indexOf("+")+1)!=null||getLore(hunhuanItem,7).slice(getLore(hunhuanItem,7).indexOf("+")+1)!="0")
{
type="generic.attackDamage";
amount=Number(getLore(hunhuanItem,7).slice(getLore(hunhuanItem,7).indexOf("+")+1));
npc.executeCommand("scoreboard players add "+player.getName()+" Heal "+amount+"");
setItemLore(item,11,"§7§l每秒回血: +"+Score(player,"Heal")+"");
}
player.setHeldItem(null);
addItemLore(item,hunhuanItem.getDisplayName())
player.sendMessage("§e你吸收了魂环,实力大幅度提升了");
replace(Score(player,"attackDamage1"),Score(player,"attackDamage2"),Score(player,"maxHealth1"),Score(player,"maxHealth2"));
npc.executeCommand("scoreboard players add "+player.getName()+" Soul_Level 1");
npc.executeCommand("scoreboard players add "+player.getName()+" hh 1");
npc.executeCommand("xp 10l "+player.getName()+"");
player.sendMessage("§e你吸收的魂环反馈给了你一级魂力")
}
}
};
//分割
function Score(Substance,objective)
{
var Points=world.getScoreboard().getPlayerScore(""+Substance.getName()+"",""+objective+"",""+objective+"");
return Points;
};
function setItemLore(item,line,lore)
{
var NBTTagString=Java.type("net.minecraft.nbt.NBTTagString")
try
{
loreList=item.getMCItemStack().field_77990_d.func_74775_l("display").func_74781_a("Lore")
loreList.func_150304_a(line,new NBTTagString(lore))
}catch(err){print("在操作lore发生异常,可能是因为没有lore 请将报错提供给作者:"+err)
}
};
function addItemLore(item,lore)
{
var NBTTagCompound=Java.type("net.minecraft.nbt.NBTTagCompound");
var NBTTagList=Java.type("net.minecraft.nbt.NBTTagList");
var NBTTagString=Java.type("net.minecraft.nbt.NBTTagString");
nbt=item.getMCItemStack().field_77990_d;
if(nbt==null)
{
nbt=new NBTTagCompound();
}
if(nbt.func_74775_l("display")=="{}")
{
displayTag=new NBTTagCompound();
nbt.func_74782_a("display",displayTag);
}
if(nbt.func_74775_l("display").func_74781_a("Lore")==null)
{
loreList=new NBTTagList();
nbt.func_74775_l("display").func_74782_a("Lore",loreList);
}
item.getMCItemStack().field_77990_d=nbt;
loreList=item.getMCItemStack().field_77990_d.func_74775_l("display").func_74781_a("Lore")
loreList.func_74742_a(new NBTTagString(lore))
}
function getLore(item,line)
{
var NBTTagCompound = Java.type("net.minecraft.nbt.NBTTagCompound");
Item=item.getMCItemStack();
var nbt=Item.field_77990_d;
if(nbt==null)
{
return -1
};
if(nbt.func_74775_l("display")!==null)
{
var loreLength=nbt.func_74775_l("display").func_150295_c("Lore",8).func_74745_c();
if(line<=loreLength)
{
var lore=nbt.func_74775_l("display").func_150295_c("Lore",8).func_150307_f(line)
return lore
}
}
else
{
return -1
}
}
function setItemLore(item,line,lore)
{
var NBTTagString=Java.type("net.minecraft.nbt.NBTTagString")
try
{
loreList=item.getMCItemStack().field_77990_d.func_74775_l("display").func_74781_a("Lore")
loreList.func_150304_a(line,new NBTTagString(lore))
}
catch(err)
{
print("在操作lore发生异常,可能是因为没有lore 请将报错提供给作者:"+err)
}
};
function addItemLore(item,lore)
{
var NBTTagCompound=Java.type("net.minecraft.nbt.NBTTagCompound")
var NBTTagList=Java.type("net.minecraft.nbt.NBTTagList")
var NBTTagString=Java.type("net.minecraft.nbt.NBTTagString")
nbt=item.getMCItemStack().field_77990_d;
if(nbt==null)
{
nbt=new NBTTagCompound();
}
if(nbt.func_74775_l("display")=="{}")
{
displayTag=new NBTTagCompound();
nbt.func_74782_a("display",displayTag);
}
if(nbt.func_74775_l("display").func_74781_a("Lore")==null){
loreList=new NBTTagList();
nbt.func_74775_l("display").func_74782_a("Lore",loreList);
}
item.getMCItemStack().field_77990_d=nbt;
loreList=item.getMCItemStack().field_77990_d.func_74775_l("display").func_74781_a("Lore")
loreList.func_74742_a(new NBTTagString(lore))
}
function judegLore(item,content)
{
var NBTTagCompound = Java.type("net.minecraft.nbt.NBTTagCompound");
Item=item.getMCItemStack();
var nbt=Item.field_77990_d;
if(nbt==null)
{
return -1
};
if(nbt.func_74775_l("display")!==null)
{
var loreLength=nbt.func_74775_l("display").func_150295_c("Lore",8).func_74745_c();
for(var i=0;i<loreLength;i++)
{
var lore=nbt.func_74775_l("display").func_150295_c("Lore",8).func_150307_f(i)
if(lore.indexOf(content)!=-1)
{
return i
}
if(lore.indexOf(content)==-1&&i==loreLength-1)
{
return -1
}
}
}
else
{
return -1
}
}
function judge(judegItem)
{
var Item=judegItem;
var NBTTagCompound = Java.type("net.minecraft.nbt.NBTTagCompound")
var itemStack = Item.getMCItemStack();
var root = itemStack.field_77990_d;
if (root == null)
{
root = new NBTTagCompound();
}
var attributeModifiers = root.func_150295_c("AttributeModifiers", 10);
var attrList=attributeModifiers.func_74745_c();
var itemHealth=0,itemDamage=0
for(var n=0;n<attrList;n++)
{
var test=attributeModifiers.func_150305_b(n);
if(test.func_74779_i("AttributeName")=="generic.maxHealth"&&test.func_74762_e("Operation")==0)
{
itemHealth=itemHealth+test.func_74769_h("Amount")
};
if(test.func_74779_i("AttributeName")=="generic.attackDamage"&&test.func_74762_e("Operation")==0)
{
itemDamage=itemDamage+test.func_74769_h("Amount")
}
}
if (itemDamage>itemHealth)
{
var type=0;
return type
};
if (itemDamage<itemHealth)
{
var type=1;
return type
};
if (itemDamage==itemHealth&&itemHealth==0){
var type=2;
return type
}
};
function xishou()
{
if(Score(player,"Soul_Level")%10==0)
{
if(player.getHeldItem()!=null&&player.getInventory()[0]!=null)
{
var item1=player.getHeldItem();
var item2=player.getInventory()[0];
if(getLore(item1,0)=="§c§l[魂环]")
{
if(judge(item2)!=2&&getLore(item2,0)=="§c§l持有者:"+player.getName()+"")
{
if(Number(getLore(item1,8).slice(getLore(item1,8).indexOf(":")+1))<=Score(player,"Soul_Level"))
{
hunhuan(item2,item1)
}
else
{
player.sendMessage("&4你无法跨界吸收此魂环")
}
}
else
{
player.sendMessage("&3这个东西不是武魂")
}
}
else
{
player.sendMessage("&9该物品不是魂环,请手持魂环")
}
}
else
{
player.sendMessage("&6请将武魂放第一格并手持魂环吸收")
}
}
else
{
player.sendMessage("&5你现在还无法吸收魂环")
}
};
function add(attribute,amount,operation)
{
var NBTTagCompound = Java.type("net.minecraft.nbt.NBTTagCompound");
var UUID = Java.type("java.util.UUID");
var itemStack = player.getInventory()[0].getMCItemStack();
var root = itemStack.field_77990_d;
if (root == null) 
{
    root = new NBTTagCompound();
    }
    var attributeModifiers = root.func_150295_c("AttributeModifiers", 10);
    var attributeModifier = new NBTTagCompound();
    var uuid = UUID.randomUUID();
    attributeModifier.func_74778_a("AttributeName", "generic."+attribute);
    attributeModifier.func_74778_a("Name","My Modifier");
    attributeModifier.func_74780_a("Amount", amount);
    attributeModifier.func_74768_a("Operation", operation);
    attributeModifier.func_74772_a("UUIDMost", uuid.getMostSignificantBits());
    attributeModifier.func_74772_a("UUIDLeast", uuid.getLeastSignificantBits());
    attributeModifiers.func_74742_a(attributeModifier);
    root.func_74782_a("AttributeModifiers", attributeModifiers);
    itemStack.field_77990_d = root;
}
function replace(a,b,c,d)
{
	reset(player.getInventory()[0]);
	add("attackDamage",a,0);
	add("attackDamage",b*0.01,1);
	add("maxHealth",c,0);
	add("maxHealth",d*0.01,1);
};
function reset(item)
{
var NBTTagCompound=Java.type("net.minecraft.nbt.NBTTagCompound");
var NBTTagList=Java.type("net.minecraft.nbt.NBTTagList");
item=item.getMCItemStack();
nbt=item.field_77990_d;
	if(nbt==null)
	{
	nbt=new NBTTagCompound();
	}
attrList=nbt.func_150295_c("AttributeModifiers",0)
attr=new NBTTagCompound();
attr.func_74777_a("Amount",0);
attr.func_74778_a("AttributeName","generic.attackDamage");
attr.func_74768_a("Operation",0);
attr.func_74778_a("Name","My Modifier");
attr.func_74772_a("UUIDLeast",6064471111);
attr.func_74772_a("UUIDMost",4644964200)
attrList.func_74742_a(attr);
nbt.func_74782_a("AttributeModifiers",attrList);
item.field_77990_d=nbt;
return nbt;
};